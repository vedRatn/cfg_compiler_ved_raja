
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_name #0001 procedure_body
2: #0001 ->  <empty>
3: program ->  procedure_name #0002 procedure_body
4: #0002 ->  <empty>
5: procedure_name (NAME) ->  NAME '(' ')'
6: procedure_body ('{') ->  '{' declaration_statement_list #0003 basic_block_list '}'
7: #0003 ->  <empty>
8: procedure_body ('{') ->  '{' basic_block_list '}'
9: declaration_statement_list ->  declaration_statement
10: declaration_statement_list ->  declaration_statement_list declaration_statement
11: declaration_statement (INTEGER) ->  INTEGER NAME ';'
12: basic_block_list ->  basic_block_list basic_block
13: basic_block_list ->  basic_block
14: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list
15: executable_statement_list ->  assignment_statement_list
16: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
17: executable_statement_list ->  assignment_statement_list if_statement
18: executable_statement_list ->  assignment_statement_list goto_statement
19: assignment_statement_list ->  <empty>
20: assignment_statement_list ->  assignment_statement_list assignment_statement
21: if_statement (IF) ->  IF '(' relational_statement ')' goto_statement ELSE goto_statement
22: goto_statement (GOTO) ->  GOTO '<' NAME INTEGER_NUMBER '>' ';'
23: comparator ('<') ->  '<'
24: comparator ('>') ->  '>'
25: comparator ('<') ->  '<' '='
26: comparator ('>') ->  '>' '='
27: comparator ('=') ->  '=' '='
28: comparator ('!') ->  '!' '='
29: relational_statement ->  variable comparator variable
30: relational_statement ->  variable comparator constant
31: relational_statement ->  constant comparator constant
32: relational_statement ->  constant comparator variable
33: relational_statement ->  relational_statement comparator variable
34: relational_statement ->  relational_statement comparator constant
35: assignment_statement ('=') ->  variable '=' variable ';'
36: assignment_statement ('=') ->  variable '=' constant ';'
37: assignment_statement ('=') ->  variable '=' relational_statement ';'
38: variable (NAME) ->  NAME
39: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
40: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: NAME
   259: RETURN
   260: INTEGER
   261: IF
   262: ELSE
   263: GOTO
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    60: '<'
    62: '>'
    58: ':'
    61: '='
    33: '!'


Grammar States: 
State 0:
40: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_name to state 3
  3:   On declaration_statement to state 4
  4:   On NAME to state 5
  5:   On INTEGER to state 6


State 1:
40: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_name #0001 procedure_body 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_name to state 7
  1:   On declaration_statement to state 8
  2:   On NAME to state 5
  3:   On INTEGER to state 6


State 3:
3: program -> procedure_name  . #0002 procedure_body 
  0:   On #0002 to state 9
  Reduce by 4: #0002 ->  . 


State 4:
9: declaration_statement_list -> declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement  . 


State 5:
5: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 10


State 6:
11: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 11


State 7:
1: program -> declaration_statement_list procedure_name  . #0001 procedure_body 
  0:   On #0001 to state 12
  Reduce by 2: #0001 ->  . 


State 8:
10: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 10: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 9:
3: program -> procedure_name #0002  . procedure_body 
  0:   On procedure_body to state 13
  1:   On '{' to state 14


State 10:
5: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 15


State 11:
11: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 16


State 12:
1: program -> declaration_statement_list procedure_name #0001  . procedure_body 
  0:   On procedure_body to state 17
  1:   On '{' to state 14


State 13:
3: program -> procedure_name #0002 procedure_body  . 
  Reduce by 3: program -> procedure_name #0002 procedure_body  . 


State 14:
6: procedure_body -> '{'  . declaration_statement_list #0003 basic_block_list '}' 
8: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 18
  1:   On basic_block_list to state 19
  2:   On declaration_statement to state 4
  3:   On basic_block to state 20
  4:   On INTEGER to state 6
  5:   On '<' to state 21


State 15:
5: procedure_name -> NAME '(' ')'  . 
  Reduce by 5: procedure_name -> NAME '(' ')'  . 


State 16:
11: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 11: declaration_statement -> INTEGER NAME ';'  . 


State 17:
1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 
  Reduce by 1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 


State 18:
6: procedure_body -> '{' declaration_statement_list  . #0003 basic_block_list '}' 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0003 to state 22
  1:   On declaration_statement to state 8
  2:   On INTEGER to state 6
  Reduce by 7: #0003 ->  . 


State 19:
8: procedure_body -> '{' basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 23
  1:   On basic_block to state 24
  2:   On '<' to state 21


State 20:
13: basic_block_list -> basic_block  . 
  Reduce by 13: basic_block_list -> basic_block  . 


State 21:
14: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' executable_statement_list 
  0:   On NAME to state 25


State 22:
6: procedure_body -> '{' declaration_statement_list #0003  . basic_block_list '}' 
  0:   On basic_block_list to state 26
  1:   On basic_block to state 20
  2:   On '<' to state 21


State 23:
8: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 8: procedure_body -> '{' basic_block_list '}'  . 


State 24:
12: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 12: basic_block_list -> basic_block_list basic_block  . 


State 25:
14: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' executable_statement_list 
  0:   On INTEGER_NUMBER to state 27


State 26:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 28
  1:   On basic_block to state 24
  2:   On '<' to state 21


State 27:
14: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' executable_statement_list 
  0:   On '>' to state 29


State 28:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 
  Reduce by 6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 


State 29:
14: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' executable_statement_list 
  0:   On ':' to state 30


State 30:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . executable_statement_list 
  0:   On executable_statement_list to state 31
  1:   On assignment_statement_list to state 32
  Reduce by 19: assignment_statement_list ->  . 


State 31:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 
  Reduce by 14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 


State 32:
15: executable_statement_list -> assignment_statement_list  . 
16: executable_statement_list -> assignment_statement_list  . RETURN ';' 
17: executable_statement_list -> assignment_statement_list  . if_statement 
18: executable_statement_list -> assignment_statement_list  . goto_statement 
20: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 33
  1:   On if_statement to state 34
  2:   On goto_statement to state 35
  3:   On assignment_statement to state 36
  4:   On IF to state 37
  5:   On GOTO to state 38
  6:   On variable to state 39
  7:   On NAME to state 40
  Reduce by 15: executable_statement_list -> assignment_statement_list  . 


State 33:
16: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 41


State 34:
17: executable_statement_list -> assignment_statement_list if_statement  . 
  Reduce by 17: executable_statement_list -> assignment_statement_list if_statement  . 


State 35:
18: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 18: executable_statement_list -> assignment_statement_list goto_statement  . 


State 36:
20: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 20: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 37:
21: if_statement -> IF  . '(' relational_statement ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 42


State 38:
22: goto_statement -> GOTO  . '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 43


State 39:
35: assignment_statement -> variable  . '=' variable ';' 
36: assignment_statement -> variable  . '=' constant ';' 
37: assignment_statement -> variable  . '=' relational_statement ';' 
  0:   On '=' to state 44


State 40:
38: variable -> NAME  . 
  Reduce by 38: variable -> NAME  . 


State 41:
16: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 16: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 42:
21: if_statement -> IF '('  . relational_statement ')' goto_statement ELSE goto_statement 
  0:   On relational_statement to state 45
  1:   On variable to state 46
  2:   On constant to state 47
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 48


State 43:
22: goto_statement -> GOTO '<'  . NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 49


State 44:
35: assignment_statement -> variable '='  . variable ';' 
36: assignment_statement -> variable '='  . constant ';' 
37: assignment_statement -> variable '='  . relational_statement ';' 
  0:   On variable to state 50
  1:   On constant to state 51
  2:   On relational_statement to state 52
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 48


State 45:
21: if_statement -> IF '(' relational_statement  . ')' goto_statement ELSE goto_statement 
33: relational_statement -> relational_statement  . comparator variable 
34: relational_statement -> relational_statement  . comparator constant 
  0:   On ')' to state 53
  1:   On comparator to state 54
  2:   On '<' to state 55
  3:   On '>' to state 56
  4:   On '=' to state 57
  5:   On '!' to state 58


State 46:
29: relational_statement -> variable  . comparator variable 
30: relational_statement -> variable  . comparator constant 
  0:   On comparator to state 59
  1:   On '<' to state 55
  2:   On '>' to state 56
  3:   On '=' to state 57
  4:   On '!' to state 58


State 47:
31: relational_statement -> constant  . comparator constant 
32: relational_statement -> constant  . comparator variable 
  0:   On comparator to state 60
  1:   On '<' to state 55
  2:   On '>' to state 56
  3:   On '=' to state 57
  4:   On '!' to state 58


State 48:
39: constant -> INTEGER_NUMBER  . 
  Reduce by 39: constant -> INTEGER_NUMBER  . 


State 49:
22: goto_statement -> GOTO '<' NAME  . INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 61


State 50:
35: assignment_statement -> variable '=' variable  . ';' 
29: relational_statement -> variable  . comparator variable 
30: relational_statement -> variable  . comparator constant 
  0:   On ';' to state 62
  1:   On comparator to state 59
  2:   On '<' to state 55
  3:   On '>' to state 56
  4:   On '=' to state 57
  5:   On '!' to state 58


State 51:
36: assignment_statement -> variable '=' constant  . ';' 
31: relational_statement -> constant  . comparator constant 
32: relational_statement -> constant  . comparator variable 
  0:   On ';' to state 63
  1:   On comparator to state 60
  2:   On '<' to state 55
  3:   On '>' to state 56
  4:   On '=' to state 57
  5:   On '!' to state 58


State 52:
37: assignment_statement -> variable '=' relational_statement  . ';' 
33: relational_statement -> relational_statement  . comparator variable 
34: relational_statement -> relational_statement  . comparator constant 
  0:   On ';' to state 64
  1:   On comparator to state 54
  2:   On '<' to state 55
  3:   On '>' to state 56
  4:   On '=' to state 57
  5:   On '!' to state 58


State 53:
21: if_statement -> IF '(' relational_statement ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 65
  1:   On GOTO to state 38


State 54:
33: relational_statement -> relational_statement comparator  . variable 
34: relational_statement -> relational_statement comparator  . constant 
  0:   On variable to state 66
  1:   On constant to state 67
  2:   On NAME to state 40
  3:   On INTEGER_NUMBER to state 48


State 55:
23: comparator -> '<'  . 
25: comparator -> '<'  . '=' 
  0:   On '=' to state 68
  Reduce by 23: comparator -> '<'  . 


State 56:
24: comparator -> '>'  . 
26: comparator -> '>'  . '=' 
  0:   On '=' to state 69
  Reduce by 24: comparator -> '>'  . 


State 57:
27: comparator -> '='  . '=' 
  0:   On '=' to state 70


State 58:
28: comparator -> '!'  . '=' 
  0:   On '=' to state 71


State 59:
29: relational_statement -> variable comparator  . variable 
30: relational_statement -> variable comparator  . constant 
  0:   On variable to state 72
  1:   On constant to state 73
  2:   On NAME to state 40
  3:   On INTEGER_NUMBER to state 48


State 60:
31: relational_statement -> constant comparator  . constant 
32: relational_statement -> constant comparator  . variable 
  0:   On constant to state 74
  1:   On variable to state 75
  2:   On INTEGER_NUMBER to state 48
  3:   On NAME to state 40


State 61:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER  . '>' ';' 
  0:   On '>' to state 76


State 62:
35: assignment_statement -> variable '=' variable ';'  . 
  Reduce by 35: assignment_statement -> variable '=' variable ';'  . 


State 63:
36: assignment_statement -> variable '=' constant ';'  . 
  Reduce by 36: assignment_statement -> variable '=' constant ';'  . 


State 64:
37: assignment_statement -> variable '=' relational_statement ';'  . 
  Reduce by 37: assignment_statement -> variable '=' relational_statement ';'  . 


State 65:
21: if_statement -> IF '(' relational_statement ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 77


State 66:
33: relational_statement -> relational_statement comparator variable  . 
  Reduce by 33: relational_statement -> relational_statement comparator variable  . 


State 67:
34: relational_statement -> relational_statement comparator constant  . 
  Reduce by 34: relational_statement -> relational_statement comparator constant  . 


State 68:
25: comparator -> '<' '='  . 
  Reduce by 25: comparator -> '<' '='  . 


State 69:
26: comparator -> '>' '='  . 
  Reduce by 26: comparator -> '>' '='  . 


State 70:
27: comparator -> '=' '='  . 
  Reduce by 27: comparator -> '=' '='  . 


State 71:
28: comparator -> '!' '='  . 
  Reduce by 28: comparator -> '!' '='  . 


State 72:
29: relational_statement -> variable comparator variable  . 
  Reduce by 29: relational_statement -> variable comparator variable  . 


State 73:
30: relational_statement -> variable comparator constant  . 
  Reduce by 30: relational_statement -> variable comparator constant  . 


State 74:
31: relational_statement -> constant comparator constant  . 
  Reduce by 31: relational_statement -> constant comparator constant  . 


State 75:
32: relational_statement -> constant comparator variable  . 
  Reduce by 32: relational_statement -> constant comparator variable  . 


State 76:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>'  . ';' 
  0:   On ';' to state 78


State 77:
21: if_statement -> IF '(' relational_statement ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 79
  1:   On GOTO to state 38


State 78:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 
  Reduce by 22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 


State 79:
21: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 
  Reduce by 21: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 



