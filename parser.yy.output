
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  variable_declaration_statement_list function_declaration_statement_list #0001 procedure_list
2: #0001 ->  <empty>
3: program ->  variable_declaration_statement_list #0002 procedure_list
4: #0002 ->  <empty>
5: program ->  function_declaration_statement_list #0003 procedure_list
6: #0003 ->  <empty>
7: program ->  procedure_list
8: procedure_list ->  procedure_name procedure_body
9: procedure_list ->  procedure_list procedure_name procedure_body
10: procedure_name (NAME) ->  NAME '(' function_parameter_list ')'
11: procedure_name (NAME) ->  NAME '(' ')'
12: procedure_body ('{') ->  '{' variable_declaration_statement_list #0004 basic_block_list '}'
13: #0004 ->  <empty>
14: procedure_body ('{') ->  '{' basic_block_list '}'
15: function_declaration_statement_list ->  function_declaration_statement
16: function_declaration_statement_list ->  function_declaration_statement_list function_declaration_statement
17: variable_declaration_statement_list ->  variable_declaration_statement
18: variable_declaration_statement_list ->  variable_declaration_statement_list variable_declaration_statement
19: variable_declaration_statement (INTEGER) ->  INTEGER NAME ';'
20: variable_declaration_statement (FLOAT) ->  FLOAT NAME ';'
21: variable_declaration_statement (DOUBLE) ->  DOUBLE NAME ';'
22: function_declaration_statement (VOID) ->  VOID NAME '(' function_parameter_list ')' ';'
23: function_declaration_statement (VOID) ->  VOID NAME '(' ')' ';'
24: function_declaration_statement (INTEGER) ->  INTEGER NAME '(' function_parameter_list ')' ';'
25: function_declaration_statement (INTEGER) ->  INTEGER NAME '(' ')' ';'
26: function_declaration_statement (FLOAT) ->  FLOAT NAME '(' function_parameter_list ')' ';'
27: function_declaration_statement (FLOAT) ->  FLOAT NAME '(' ')' ';'
28: function_declaration_statement (DOUBLE) ->  DOUBLE NAME '(' function_parameter_list ')' ';'
29: function_declaration_statement (DOUBLE) ->  DOUBLE NAME '(' ')' ';'
30: function_parameter_list ->  function_parameter
31: function_parameter_list (',') ->  function_parameter_list ',' function_parameter
32: function_parameter (INTEGER) ->  INTEGER NAME
33: function_parameter (FLOAT) ->  FLOAT NAME
34: function_parameter (DOUBLE) ->  DOUBLE NAME
35: basic_block_list ->  basic_block_list basic_block
36: basic_block_list ->  basic_block
37: basic_block (BASIC_BLOCK) ->  BASIC_BLOCK ':' executable_statement_list
38: return_statement (RETURN) ->  RETURN ';'
39: return_statement (RETURN) ->  RETURN relational_statement ';'
40: executable_statement_list ->  assignment_statement
41: executable_statement_list (';') ->  function_call ';'
42: executable_statement_list ->  assignment_statement executable_statement_list
43: executable_statement_list (';') ->  function_call ';' executable_statement_list
44: executable_statement_list ->  return_statement
45: executable_statement_list ->  if_statement
46: executable_statement_list ->  goto_statement
47: function_call (NAME) ->  NAME '(' function_argument_list ')'
48: function_call (NAME) ->  NAME '(' ')'
49: function_argument_list ->  function_argument
50: function_argument_list (',') ->  function_argument_list ',' function_argument
51: function_argument ->  relational_statement
52: if_statement (IF) ->  IF '(' relational_statement ')' goto_statement ELSE goto_statement
53: goto_statement (GOTO) ->  GOTO BASIC_BLOCK ';'
54: relational_statement ->  arithmetic_expression
55: relational_statement (le) ->  relational_statement le relational_statement
56: relational_statement (ge) ->  relational_statement ge relational_statement
57: relational_statement (gt) ->  relational_statement gt relational_statement
58: relational_statement (lt) ->  relational_statement lt relational_statement
59: relational_statement (eq) ->  relational_statement eq relational_statement
60: relational_statement (ne) ->  relational_statement ne relational_statement
61: arithmetic_expression ->  constant
62: arithmetic_expression ->  variable
63: arithmetic_expression ->  function_call
64: arithmetic_expression ('(') ->  '(' relational_statement ')'
65: arithmetic_expression ('(') ->  '(' FLOAT ')' function_call
66: arithmetic_expression ('(') ->  '(' INTEGER ')' function_call
67: arithmetic_expression ('(') ->  '(' DOUBLE ')' function_call
68: arithmetic_expression ('(') ->  '(' FLOAT ')' variable
69: arithmetic_expression ('(') ->  '(' INTEGER ')' variable
70: arithmetic_expression ('(') ->  '(' DOUBLE ')' variable
71: arithmetic_expression ('(') ->  '(' INTEGER ')' '(' arithmetic_expression ')'
72: arithmetic_expression ('(') ->  '(' FLOAT ')' '(' relational_statement ')'
73: arithmetic_expression ('(') ->  '(' DOUBLE ')' '(' relational_statement ')'
74: arithmetic_expression ('-') ->  '-' arithmetic_expression
75: arithmetic_expression ('+') ->  arithmetic_expression '+' arithmetic_expression
76: arithmetic_expression ('-') ->  arithmetic_expression '-' arithmetic_expression
77: arithmetic_expression ('*') ->  arithmetic_expression '*' arithmetic_expression
78: arithmetic_expression ('/') ->  arithmetic_expression '/' arithmetic_expression
79: assignment_statement (ASSIGN_OP) ->  variable ASSIGN_OP relational_statement ';'
80: variable (NAME) ->  NAME
81: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
82: constant (FLOAT_NUMBER) ->  FLOAT_NUMBER
83: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BASIC_BLOCK
   259: FLOAT_NUMBER
   260: NAME
   261: RETURN
   262: INTEGER
   263: FLOAT
   264: DOUBLE
   265: VOID
   266: IF
   267: ELSE
   268: GOTO
   269: ASSIGN_OP
   270: ne
   271: eq
   272: lt
   273: le
   274: gt
   275: ge
    43: '+'
    45: '-'
    47: '/'
    42: '*'
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    44: ','
    58: ':'


Grammar States: 
State 0:
83: program_$ ->  . program 
  0:   On program to state 1
  1:   On variable_declaration_statement_list to state 2
  2:   On function_declaration_statement_list to state 3
  3:   On procedure_list to state 4
  4:   On variable_declaration_statement to state 5
  5:   On function_declaration_statement to state 6
  6:   On procedure_name to state 7
  7:   On INTEGER to state 8
  8:   On FLOAT to state 9
  9:   On DOUBLE to state 10
  10:   On VOID to state 11
  11:   On NAME to state 12


State 1:
83: program_$ -> program  . 


State 2:
1: program -> variable_declaration_statement_list  . function_declaration_statement_list #0001 procedure_list 
3: program -> variable_declaration_statement_list  . #0002 procedure_list 
18: variable_declaration_statement_list -> variable_declaration_statement_list  . variable_declaration_statement 
  0:   On function_declaration_statement_list to state 13
  1:   On #0002 to state 14
  2:   On variable_declaration_statement to state 15
  3:   On function_declaration_statement to state 6
  4:   On INTEGER to state 8
  5:   On FLOAT to state 9
  6:   On DOUBLE to state 10
  7:   On VOID to state 11
  Reduce by 4: #0002 ->  . 


State 3:
5: program -> function_declaration_statement_list  . #0003 procedure_list 
16: function_declaration_statement_list -> function_declaration_statement_list  . function_declaration_statement 
  0:   On #0003 to state 16
  1:   On function_declaration_statement to state 17
  2:   On VOID to state 11
  3:   On INTEGER to state 18
  4:   On FLOAT to state 19
  5:   On DOUBLE to state 20
  Reduce by 6: #0003 ->  . 


State 4:
7: program -> procedure_list  . 
9: procedure_list -> procedure_list  . procedure_name procedure_body 
  0:   On procedure_name to state 21
  1:   On NAME to state 12
  Reduce by 7: program -> procedure_list  . 


State 5:
17: variable_declaration_statement_list -> variable_declaration_statement  . 
  Reduce by 17: variable_declaration_statement_list -> variable_declaration_statement  . 


State 6:
15: function_declaration_statement_list -> function_declaration_statement  . 
  Reduce by 15: function_declaration_statement_list -> function_declaration_statement  . 


State 7:
8: procedure_list -> procedure_name  . procedure_body 
  0:   On procedure_body to state 22
  1:   On '{' to state 23


State 8:
19: variable_declaration_statement -> INTEGER  . NAME ';' 
24: function_declaration_statement -> INTEGER  . NAME '(' function_parameter_list ')' ';' 
25: function_declaration_statement -> INTEGER  . NAME '(' ')' ';' 
  0:   On NAME to state 24


State 9:
20: variable_declaration_statement -> FLOAT  . NAME ';' 
26: function_declaration_statement -> FLOAT  . NAME '(' function_parameter_list ')' ';' 
27: function_declaration_statement -> FLOAT  . NAME '(' ')' ';' 
  0:   On NAME to state 25


State 10:
21: variable_declaration_statement -> DOUBLE  . NAME ';' 
28: function_declaration_statement -> DOUBLE  . NAME '(' function_parameter_list ')' ';' 
29: function_declaration_statement -> DOUBLE  . NAME '(' ')' ';' 
  0:   On NAME to state 26


State 11:
22: function_declaration_statement -> VOID  . NAME '(' function_parameter_list ')' ';' 
23: function_declaration_statement -> VOID  . NAME '(' ')' ';' 
  0:   On NAME to state 27


State 12:
10: procedure_name -> NAME  . '(' function_parameter_list ')' 
11: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 28


State 13:
1: program -> variable_declaration_statement_list function_declaration_statement_list  . #0001 procedure_list 
16: function_declaration_statement_list -> function_declaration_statement_list  . function_declaration_statement 
  0:   On #0001 to state 29
  1:   On function_declaration_statement to state 17
  2:   On VOID to state 11
  3:   On INTEGER to state 18
  4:   On FLOAT to state 19
  5:   On DOUBLE to state 20
  Reduce by 2: #0001 ->  . 


State 14:
3: program -> variable_declaration_statement_list #0002  . procedure_list 
  0:   On procedure_list to state 30
  1:   On procedure_name to state 7
  2:   On NAME to state 12


State 15:
18: variable_declaration_statement_list -> variable_declaration_statement_list variable_declaration_statement  . 
  Reduce by 18: variable_declaration_statement_list -> variable_declaration_statement_list variable_declaration_statement  . 


State 16:
5: program -> function_declaration_statement_list #0003  . procedure_list 
  0:   On procedure_list to state 31
  1:   On procedure_name to state 7
  2:   On NAME to state 12


State 17:
16: function_declaration_statement_list -> function_declaration_statement_list function_declaration_statement  . 
  Reduce by 16: function_declaration_statement_list -> function_declaration_statement_list function_declaration_statement  . 


State 18:
24: function_declaration_statement -> INTEGER  . NAME '(' function_parameter_list ')' ';' 
25: function_declaration_statement -> INTEGER  . NAME '(' ')' ';' 
  0:   On NAME to state 32


State 19:
26: function_declaration_statement -> FLOAT  . NAME '(' function_parameter_list ')' ';' 
27: function_declaration_statement -> FLOAT  . NAME '(' ')' ';' 
  0:   On NAME to state 33


State 20:
28: function_declaration_statement -> DOUBLE  . NAME '(' function_parameter_list ')' ';' 
29: function_declaration_statement -> DOUBLE  . NAME '(' ')' ';' 
  0:   On NAME to state 34


State 21:
9: procedure_list -> procedure_list procedure_name  . procedure_body 
  0:   On procedure_body to state 35
  1:   On '{' to state 23


State 22:
8: procedure_list -> procedure_name procedure_body  . 
  Reduce by 8: procedure_list -> procedure_name procedure_body  . 


State 23:
12: procedure_body -> '{'  . variable_declaration_statement_list #0004 basic_block_list '}' 
14: procedure_body -> '{'  . basic_block_list '}' 
  0:   On variable_declaration_statement_list to state 36
  1:   On basic_block_list to state 37
  2:   On variable_declaration_statement to state 5
  3:   On basic_block to state 38
  4:   On INTEGER to state 39
  5:   On FLOAT to state 40
  6:   On DOUBLE to state 41
  7:   On BASIC_BLOCK to state 42


State 24:
19: variable_declaration_statement -> INTEGER NAME  . ';' 
24: function_declaration_statement -> INTEGER NAME  . '(' function_parameter_list ')' ';' 
25: function_declaration_statement -> INTEGER NAME  . '(' ')' ';' 
  0:   On ';' to state 43
  1:   On '(' to state 44


State 25:
20: variable_declaration_statement -> FLOAT NAME  . ';' 
26: function_declaration_statement -> FLOAT NAME  . '(' function_parameter_list ')' ';' 
27: function_declaration_statement -> FLOAT NAME  . '(' ')' ';' 
  0:   On ';' to state 45
  1:   On '(' to state 46


State 26:
21: variable_declaration_statement -> DOUBLE NAME  . ';' 
28: function_declaration_statement -> DOUBLE NAME  . '(' function_parameter_list ')' ';' 
29: function_declaration_statement -> DOUBLE NAME  . '(' ')' ';' 
  0:   On ';' to state 47
  1:   On '(' to state 48


State 27:
22: function_declaration_statement -> VOID NAME  . '(' function_parameter_list ')' ';' 
23: function_declaration_statement -> VOID NAME  . '(' ')' ';' 
  0:   On '(' to state 49


State 28:
10: procedure_name -> NAME '('  . function_parameter_list ')' 
11: procedure_name -> NAME '('  . ')' 
  0:   On function_parameter_list to state 50
  1:   On ')' to state 51
  2:   On function_parameter to state 52
  3:   On INTEGER to state 53
  4:   On FLOAT to state 54
  5:   On DOUBLE to state 55


State 29:
1: program -> variable_declaration_statement_list function_declaration_statement_list #0001  . procedure_list 
  0:   On procedure_list to state 56
  1:   On procedure_name to state 7
  2:   On NAME to state 12


State 30:
3: program -> variable_declaration_statement_list #0002 procedure_list  . 
9: procedure_list -> procedure_list  . procedure_name procedure_body 
  0:   On procedure_name to state 21
  1:   On NAME to state 12
  Reduce by 3: program -> variable_declaration_statement_list #0002 procedure_list  . 


State 31:
5: program -> function_declaration_statement_list #0003 procedure_list  . 
9: procedure_list -> procedure_list  . procedure_name procedure_body 
  0:   On procedure_name to state 21
  1:   On NAME to state 12
  Reduce by 5: program -> function_declaration_statement_list #0003 procedure_list  . 


State 32:
24: function_declaration_statement -> INTEGER NAME  . '(' function_parameter_list ')' ';' 
25: function_declaration_statement -> INTEGER NAME  . '(' ')' ';' 
  0:   On '(' to state 44


State 33:
26: function_declaration_statement -> FLOAT NAME  . '(' function_parameter_list ')' ';' 
27: function_declaration_statement -> FLOAT NAME  . '(' ')' ';' 
  0:   On '(' to state 46


State 34:
28: function_declaration_statement -> DOUBLE NAME  . '(' function_parameter_list ')' ';' 
29: function_declaration_statement -> DOUBLE NAME  . '(' ')' ';' 
  0:   On '(' to state 48


State 35:
9: procedure_list -> procedure_list procedure_name procedure_body  . 
  Reduce by 9: procedure_list -> procedure_list procedure_name procedure_body  . 


State 36:
12: procedure_body -> '{' variable_declaration_statement_list  . #0004 basic_block_list '}' 
18: variable_declaration_statement_list -> variable_declaration_statement_list  . variable_declaration_statement 
  0:   On #0004 to state 57
  1:   On variable_declaration_statement to state 15
  2:   On INTEGER to state 39
  3:   On FLOAT to state 40
  4:   On DOUBLE to state 41
  Reduce by 13: #0004 ->  . 


State 37:
14: procedure_body -> '{' basic_block_list  . '}' 
35: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 58
  1:   On basic_block to state 59
  2:   On BASIC_BLOCK to state 42


State 38:
36: basic_block_list -> basic_block  . 
  Reduce by 36: basic_block_list -> basic_block  . 


State 39:
19: variable_declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 60


State 40:
20: variable_declaration_statement -> FLOAT  . NAME ';' 
  0:   On NAME to state 61


State 41:
21: variable_declaration_statement -> DOUBLE  . NAME ';' 
  0:   On NAME to state 62


State 42:
37: basic_block -> BASIC_BLOCK  . ':' executable_statement_list 
  0:   On ':' to state 63


State 43:
19: variable_declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 19: variable_declaration_statement -> INTEGER NAME ';'  . 


State 44:
24: function_declaration_statement -> INTEGER NAME '('  . function_parameter_list ')' ';' 
25: function_declaration_statement -> INTEGER NAME '('  . ')' ';' 
  0:   On function_parameter_list to state 64
  1:   On ')' to state 65
  2:   On function_parameter to state 52
  3:   On INTEGER to state 53
  4:   On FLOAT to state 54
  5:   On DOUBLE to state 55


State 45:
20: variable_declaration_statement -> FLOAT NAME ';'  . 
  Reduce by 20: variable_declaration_statement -> FLOAT NAME ';'  . 


State 46:
26: function_declaration_statement -> FLOAT NAME '('  . function_parameter_list ')' ';' 
27: function_declaration_statement -> FLOAT NAME '('  . ')' ';' 
  0:   On function_parameter_list to state 66
  1:   On ')' to state 67
  2:   On function_parameter to state 52
  3:   On INTEGER to state 53
  4:   On FLOAT to state 54
  5:   On DOUBLE to state 55


State 47:
21: variable_declaration_statement -> DOUBLE NAME ';'  . 
  Reduce by 21: variable_declaration_statement -> DOUBLE NAME ';'  . 


State 48:
28: function_declaration_statement -> DOUBLE NAME '('  . function_parameter_list ')' ';' 
29: function_declaration_statement -> DOUBLE NAME '('  . ')' ';' 
  0:   On function_parameter_list to state 68
  1:   On ')' to state 69
  2:   On function_parameter to state 52
  3:   On INTEGER to state 53
  4:   On FLOAT to state 54
  5:   On DOUBLE to state 55


State 49:
22: function_declaration_statement -> VOID NAME '('  . function_parameter_list ')' ';' 
23: function_declaration_statement -> VOID NAME '('  . ')' ';' 
  0:   On function_parameter_list to state 70
  1:   On ')' to state 71
  2:   On function_parameter to state 52
  3:   On INTEGER to state 53
  4:   On FLOAT to state 54
  5:   On DOUBLE to state 55


State 50:
10: procedure_name -> NAME '(' function_parameter_list  . ')' 
31: function_parameter_list -> function_parameter_list  . ',' function_parameter 
  0:   On ')' to state 72
  1:   On ',' to state 73


State 51:
11: procedure_name -> NAME '(' ')'  . 
  Reduce by 11: procedure_name -> NAME '(' ')'  . 


State 52:
30: function_parameter_list -> function_parameter  . 
  Reduce by 30: function_parameter_list -> function_parameter  . 


State 53:
32: function_parameter -> INTEGER  . NAME 
  0:   On NAME to state 74


State 54:
33: function_parameter -> FLOAT  . NAME 
  0:   On NAME to state 75


State 55:
34: function_parameter -> DOUBLE  . NAME 
  0:   On NAME to state 76


State 56:
1: program -> variable_declaration_statement_list function_declaration_statement_list #0001 procedure_list  . 
9: procedure_list -> procedure_list  . procedure_name procedure_body 
  0:   On procedure_name to state 21
  1:   On NAME to state 12
  Reduce by 1: program -> variable_declaration_statement_list function_declaration_statement_list #0001 procedure_list  . 


State 57:
12: procedure_body -> '{' variable_declaration_statement_list #0004  . basic_block_list '}' 
  0:   On basic_block_list to state 77
  1:   On basic_block to state 38
  2:   On BASIC_BLOCK to state 42


State 58:
14: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 14: procedure_body -> '{' basic_block_list '}'  . 


State 59:
35: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 35: basic_block_list -> basic_block_list basic_block  . 


State 60:
19: variable_declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 43


State 61:
20: variable_declaration_statement -> FLOAT NAME  . ';' 
  0:   On ';' to state 45


State 62:
21: variable_declaration_statement -> DOUBLE NAME  . ';' 
  0:   On ';' to state 47


State 63:
37: basic_block -> BASIC_BLOCK ':'  . executable_statement_list 
  0:   On executable_statement_list to state 78
  1:   On assignment_statement to state 79
  2:   On function_call to state 80
  3:   On return_statement to state 81
  4:   On if_statement to state 82
  5:   On goto_statement to state 83
  6:   On variable to state 84
  7:   On NAME to state 85
  8:   On RETURN to state 86
  9:   On IF to state 87
  10:   On GOTO to state 88


State 64:
24: function_declaration_statement -> INTEGER NAME '(' function_parameter_list  . ')' ';' 
31: function_parameter_list -> function_parameter_list  . ',' function_parameter 
  0:   On ')' to state 89
  1:   On ',' to state 73


State 65:
25: function_declaration_statement -> INTEGER NAME '(' ')'  . ';' 
  0:   On ';' to state 90


State 66:
26: function_declaration_statement -> FLOAT NAME '(' function_parameter_list  . ')' ';' 
31: function_parameter_list -> function_parameter_list  . ',' function_parameter 
  0:   On ')' to state 91
  1:   On ',' to state 73


State 67:
27: function_declaration_statement -> FLOAT NAME '(' ')'  . ';' 
  0:   On ';' to state 92


State 68:
28: function_declaration_statement -> DOUBLE NAME '(' function_parameter_list  . ')' ';' 
31: function_parameter_list -> function_parameter_list  . ',' function_parameter 
  0:   On ')' to state 93
  1:   On ',' to state 73


State 69:
29: function_declaration_statement -> DOUBLE NAME '(' ')'  . ';' 
  0:   On ';' to state 94


State 70:
22: function_declaration_statement -> VOID NAME '(' function_parameter_list  . ')' ';' 
31: function_parameter_list -> function_parameter_list  . ',' function_parameter 
  0:   On ')' to state 95
  1:   On ',' to state 73


State 71:
23: function_declaration_statement -> VOID NAME '(' ')'  . ';' 
  0:   On ';' to state 96


State 72:
10: procedure_name -> NAME '(' function_parameter_list ')'  . 
  Reduce by 10: procedure_name -> NAME '(' function_parameter_list ')'  . 


State 73:
31: function_parameter_list -> function_parameter_list ','  . function_parameter 
  0:   On function_parameter to state 97
  1:   On INTEGER to state 53
  2:   On FLOAT to state 54
  3:   On DOUBLE to state 55


State 74:
32: function_parameter -> INTEGER NAME  . 
  Reduce by 32: function_parameter -> INTEGER NAME  . 


State 75:
33: function_parameter -> FLOAT NAME  . 
  Reduce by 33: function_parameter -> FLOAT NAME  . 


State 76:
34: function_parameter -> DOUBLE NAME  . 
  Reduce by 34: function_parameter -> DOUBLE NAME  . 


State 77:
12: procedure_body -> '{' variable_declaration_statement_list #0004 basic_block_list  . '}' 
35: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 98
  1:   On basic_block to state 59
  2:   On BASIC_BLOCK to state 42


State 78:
37: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 
  Reduce by 37: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 


State 79:
40: executable_statement_list -> assignment_statement  . 
42: executable_statement_list -> assignment_statement  . executable_statement_list 
  0:   On executable_statement_list to state 99
  1:   On assignment_statement to state 79
  2:   On function_call to state 80
  3:   On return_statement to state 81
  4:   On if_statement to state 82
  5:   On goto_statement to state 83
  6:   On variable to state 84
  7:   On NAME to state 85
  8:   On RETURN to state 86
  9:   On IF to state 87
  10:   On GOTO to state 88
  Reduce by 40: executable_statement_list -> assignment_statement  . 


State 80:
41: executable_statement_list -> function_call  . ';' 
43: executable_statement_list -> function_call  . ';' executable_statement_list 
  0:   On ';' to state 100


State 81:
44: executable_statement_list -> return_statement  . 
  Reduce by 44: executable_statement_list -> return_statement  . 


State 82:
45: executable_statement_list -> if_statement  . 
  Reduce by 45: executable_statement_list -> if_statement  . 


State 83:
46: executable_statement_list -> goto_statement  . 
  Reduce by 46: executable_statement_list -> goto_statement  . 


State 84:
79: assignment_statement -> variable  . ASSIGN_OP relational_statement ';' 
  0:   On ASSIGN_OP to state 101


State 85:
47: function_call -> NAME  . '(' function_argument_list ')' 
48: function_call -> NAME  . '(' ')' 
80: variable -> NAME  . 
  0:   On '(' to state 102
  Reduce by 80: variable -> NAME  . 


State 86:
38: return_statement -> RETURN  . ';' 
39: return_statement -> RETURN  . relational_statement ';' 
  0:   On ';' to state 103
  1:   On relational_statement to state 104
  2:   On arithmetic_expression to state 105
  3:   On constant to state 106
  4:   On variable to state 107
  5:   On function_call to state 108
  6:   On '(' to state 109
  7:   On '-' to state 110
  8:   On INTEGER_NUMBER to state 111
  9:   On FLOAT_NUMBER to state 112
  10:   On NAME to state 85


State 87:
52: if_statement -> IF  . '(' relational_statement ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 113


State 88:
53: goto_statement -> GOTO  . BASIC_BLOCK ';' 
  0:   On BASIC_BLOCK to state 114


State 89:
24: function_declaration_statement -> INTEGER NAME '(' function_parameter_list ')'  . ';' 
  0:   On ';' to state 115


State 90:
25: function_declaration_statement -> INTEGER NAME '(' ')' ';'  . 
  Reduce by 25: function_declaration_statement -> INTEGER NAME '(' ')' ';'  . 


State 91:
26: function_declaration_statement -> FLOAT NAME '(' function_parameter_list ')'  . ';' 
  0:   On ';' to state 116


State 92:
27: function_declaration_statement -> FLOAT NAME '(' ')' ';'  . 
  Reduce by 27: function_declaration_statement -> FLOAT NAME '(' ')' ';'  . 


State 93:
28: function_declaration_statement -> DOUBLE NAME '(' function_parameter_list ')'  . ';' 
  0:   On ';' to state 117


State 94:
29: function_declaration_statement -> DOUBLE NAME '(' ')' ';'  . 
  Reduce by 29: function_declaration_statement -> DOUBLE NAME '(' ')' ';'  . 


State 95:
22: function_declaration_statement -> VOID NAME '(' function_parameter_list ')'  . ';' 
  0:   On ';' to state 118


State 96:
23: function_declaration_statement -> VOID NAME '(' ')' ';'  . 
  Reduce by 23: function_declaration_statement -> VOID NAME '(' ')' ';'  . 


State 97:
31: function_parameter_list -> function_parameter_list ',' function_parameter  . 
  Reduce by 31: function_parameter_list -> function_parameter_list ',' function_parameter  . 


State 98:
12: procedure_body -> '{' variable_declaration_statement_list #0004 basic_block_list '}'  . 
  Reduce by 12: procedure_body -> '{' variable_declaration_statement_list #0004 basic_block_list '}'  . 


State 99:
42: executable_statement_list -> assignment_statement executable_statement_list  . 
  Reduce by 42: executable_statement_list -> assignment_statement executable_statement_list  . 


State 100:
41: executable_statement_list -> function_call ';'  . 
43: executable_statement_list -> function_call ';'  . executable_statement_list 
  0:   On executable_statement_list to state 119
  1:   On assignment_statement to state 79
  2:   On function_call to state 80
  3:   On return_statement to state 81
  4:   On if_statement to state 82
  5:   On goto_statement to state 83
  6:   On variable to state 84
  7:   On NAME to state 85
  8:   On RETURN to state 86
  9:   On IF to state 87
  10:   On GOTO to state 88
  Reduce by 41: executable_statement_list -> function_call ';'  . 


State 101:
79: assignment_statement -> variable ASSIGN_OP  . relational_statement ';' 
  0:   On relational_statement to state 120
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 102:
47: function_call -> NAME '('  . function_argument_list ')' 
48: function_call -> NAME '('  . ')' 
  0:   On function_argument_list to state 121
  1:   On ')' to state 122
  2:   On function_argument to state 123
  3:   On relational_statement to state 124
  4:   On arithmetic_expression to state 105
  5:   On constant to state 106
  6:   On variable to state 107
  7:   On function_call to state 108
  8:   On '(' to state 109
  9:   On '-' to state 110
  10:   On INTEGER_NUMBER to state 111
  11:   On FLOAT_NUMBER to state 112
  12:   On NAME to state 85


State 103:
38: return_statement -> RETURN ';'  . 
  Reduce by 38: return_statement -> RETURN ';'  . 


State 104:
39: return_statement -> RETURN relational_statement  . ';' 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ';' to state 125
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 105:
54: relational_statement -> arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0:   On '+' to state 132
  1:   On '-' to state 133
  2:   On '*' to state 134
  3:   On '/' to state 135
  Reduce by 54: relational_statement -> arithmetic_expression  . 


State 106:
61: arithmetic_expression -> constant  . 
  Reduce by 61: arithmetic_expression -> constant  . 


State 107:
62: arithmetic_expression -> variable  . 
  Reduce by 62: arithmetic_expression -> variable  . 


State 108:
63: arithmetic_expression -> function_call  . 
  Reduce by 63: arithmetic_expression -> function_call  . 


State 109:
64: arithmetic_expression -> '('  . relational_statement ')' 
65: arithmetic_expression -> '('  . FLOAT ')' function_call 
66: arithmetic_expression -> '('  . INTEGER ')' function_call 
67: arithmetic_expression -> '('  . DOUBLE ')' function_call 
68: arithmetic_expression -> '('  . FLOAT ')' variable 
69: arithmetic_expression -> '('  . INTEGER ')' variable 
70: arithmetic_expression -> '('  . DOUBLE ')' variable 
71: arithmetic_expression -> '('  . INTEGER ')' '(' arithmetic_expression ')' 
72: arithmetic_expression -> '('  . FLOAT ')' '(' relational_statement ')' 
73: arithmetic_expression -> '('  . DOUBLE ')' '(' relational_statement ')' 
  0:   On relational_statement to state 136
  1:   On FLOAT to state 137
  2:   On INTEGER to state 138
  3:   On DOUBLE to state 139
  4:   On arithmetic_expression to state 105
  5:   On constant to state 106
  6:   On variable to state 107
  7:   On function_call to state 108
  8:   On '(' to state 109
  9:   On '-' to state 110
  10:   On INTEGER_NUMBER to state 111
  11:   On FLOAT_NUMBER to state 112
  12:   On NAME to state 85


State 110:
74: arithmetic_expression -> '-'  . arithmetic_expression 
  0:   On arithmetic_expression to state 140
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 111:
81: constant -> INTEGER_NUMBER  . 
  Reduce by 81: constant -> INTEGER_NUMBER  . 


State 112:
82: constant -> FLOAT_NUMBER  . 
  Reduce by 82: constant -> FLOAT_NUMBER  . 


State 113:
52: if_statement -> IF '('  . relational_statement ')' goto_statement ELSE goto_statement 
  0:   On relational_statement to state 141
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 114:
53: goto_statement -> GOTO BASIC_BLOCK  . ';' 
  0:   On ';' to state 142


State 115:
24: function_declaration_statement -> INTEGER NAME '(' function_parameter_list ')' ';'  . 
  Reduce by 24: function_declaration_statement -> INTEGER NAME '(' function_parameter_list ')' ';'  . 


State 116:
26: function_declaration_statement -> FLOAT NAME '(' function_parameter_list ')' ';'  . 
  Reduce by 26: function_declaration_statement -> FLOAT NAME '(' function_parameter_list ')' ';'  . 


State 117:
28: function_declaration_statement -> DOUBLE NAME '(' function_parameter_list ')' ';'  . 
  Reduce by 28: function_declaration_statement -> DOUBLE NAME '(' function_parameter_list ')' ';'  . 


State 118:
22: function_declaration_statement -> VOID NAME '(' function_parameter_list ')' ';'  . 
  Reduce by 22: function_declaration_statement -> VOID NAME '(' function_parameter_list ')' ';'  . 


State 119:
43: executable_statement_list -> function_call ';' executable_statement_list  . 
  Reduce by 43: executable_statement_list -> function_call ';' executable_statement_list  . 


State 120:
79: assignment_statement -> variable ASSIGN_OP relational_statement  . ';' 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ';' to state 143
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 121:
47: function_call -> NAME '(' function_argument_list  . ')' 
50: function_argument_list -> function_argument_list  . ',' function_argument 
  0:   On ')' to state 144
  1:   On ',' to state 145


State 122:
48: function_call -> NAME '(' ')'  . 
  Reduce by 48: function_call -> NAME '(' ')'  . 


State 123:
49: function_argument_list -> function_argument  . 
  Reduce by 49: function_argument_list -> function_argument  . 


State 124:
51: function_argument -> relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On le to state 126
  1:   On ge to state 127
  2:   On gt to state 128
  3:   On lt to state 129
  4:   On eq to state 130
  5:   On ne to state 131
  Reduce by 51: function_argument -> relational_statement  . 


State 125:
39: return_statement -> RETURN relational_statement ';'  . 
  Reduce by 39: return_statement -> RETURN relational_statement ';'  . 


State 126:
55: relational_statement -> relational_statement le  . relational_statement 
  0:   On relational_statement to state 146
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 127:
56: relational_statement -> relational_statement ge  . relational_statement 
  0:   On relational_statement to state 147
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 128:
57: relational_statement -> relational_statement gt  . relational_statement 
  0:   On relational_statement to state 148
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 129:
58: relational_statement -> relational_statement lt  . relational_statement 
  0:   On relational_statement to state 149
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 130:
59: relational_statement -> relational_statement eq  . relational_statement 
  0:   On relational_statement to state 150
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 131:
60: relational_statement -> relational_statement ne  . relational_statement 
  0:   On relational_statement to state 151
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 132:
75: arithmetic_expression -> arithmetic_expression '+'  . arithmetic_expression 
  0:   On arithmetic_expression to state 152
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 133:
76: arithmetic_expression -> arithmetic_expression '-'  . arithmetic_expression 
  0:   On arithmetic_expression to state 153
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 134:
77: arithmetic_expression -> arithmetic_expression '*'  . arithmetic_expression 
  0:   On arithmetic_expression to state 154
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 135:
78: arithmetic_expression -> arithmetic_expression '/'  . arithmetic_expression 
  0:   On arithmetic_expression to state 155
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 136:
64: arithmetic_expression -> '(' relational_statement  . ')' 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 156
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 137:
65: arithmetic_expression -> '(' FLOAT  . ')' function_call 
68: arithmetic_expression -> '(' FLOAT  . ')' variable 
72: arithmetic_expression -> '(' FLOAT  . ')' '(' relational_statement ')' 
  0:   On ')' to state 157


State 138:
66: arithmetic_expression -> '(' INTEGER  . ')' function_call 
69: arithmetic_expression -> '(' INTEGER  . ')' variable 
71: arithmetic_expression -> '(' INTEGER  . ')' '(' arithmetic_expression ')' 
  0:   On ')' to state 158


State 139:
67: arithmetic_expression -> '(' DOUBLE  . ')' function_call 
70: arithmetic_expression -> '(' DOUBLE  . ')' variable 
73: arithmetic_expression -> '(' DOUBLE  . ')' '(' relational_statement ')' 
  0:   On ')' to state 159


State 140:
74: arithmetic_expression -> '-' arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 132
  1 (removed by precedence):   On '-' to state 133
  2:   On '*' to state 134
  3:   On '/' to state 135
  Reduce by 74: arithmetic_expression -> '-' arithmetic_expression  . 


State 141:
52: if_statement -> IF '(' relational_statement  . ')' goto_statement ELSE goto_statement 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 160
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 142:
53: goto_statement -> GOTO BASIC_BLOCK ';'  . 
  Reduce by 53: goto_statement -> GOTO BASIC_BLOCK ';'  . 


State 143:
79: assignment_statement -> variable ASSIGN_OP relational_statement ';'  . 
  Reduce by 79: assignment_statement -> variable ASSIGN_OP relational_statement ';'  . 


State 144:
47: function_call -> NAME '(' function_argument_list ')'  . 
  Reduce by 47: function_call -> NAME '(' function_argument_list ')'  . 


State 145:
50: function_argument_list -> function_argument_list ','  . function_argument 
  0:   On function_argument to state 161
  1:   On relational_statement to state 124
  2:   On arithmetic_expression to state 105
  3:   On constant to state 106
  4:   On variable to state 107
  5:   On function_call to state 108
  6:   On '(' to state 109
  7:   On '-' to state 110
  8:   On INTEGER_NUMBER to state 111
  9:   On FLOAT_NUMBER to state 112
  10:   On NAME to state 85


State 146:
55: relational_statement -> relational_statement le relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 126
  1 (removed by precedence):   On ge to state 127
  2 (removed by precedence):   On gt to state 128
  3 (removed by precedence):   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 55: relational_statement -> relational_statement le relational_statement  . 


State 147:
56: relational_statement -> relational_statement ge relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 126
  1 (removed by precedence):   On ge to state 127
  2 (removed by precedence):   On gt to state 128
  3 (removed by precedence):   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 56: relational_statement -> relational_statement ge relational_statement  . 


State 148:
57: relational_statement -> relational_statement gt relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 126
  1 (removed by precedence):   On ge to state 127
  2 (removed by precedence):   On gt to state 128
  3 (removed by precedence):   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 57: relational_statement -> relational_statement gt relational_statement  . 


State 149:
58: relational_statement -> relational_statement lt relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 126
  1 (removed by precedence):   On ge to state 127
  2 (removed by precedence):   On gt to state 128
  3 (removed by precedence):   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 58: relational_statement -> relational_statement lt relational_statement  . 


State 150:
59: relational_statement -> relational_statement eq relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On le to state 126
  1:   On ge to state 127
  2:   On gt to state 128
  3:   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 59: relational_statement -> relational_statement eq relational_statement  . 


State 151:
60: relational_statement -> relational_statement ne relational_statement  . 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On le to state 126
  1:   On ge to state 127
  2:   On gt to state 128
  3:   On lt to state 129
  4 (removed by precedence):   On eq to state 130
  5 (removed by precedence):   On ne to state 131
  Reduce by 60: relational_statement -> relational_statement ne relational_statement  . 


State 152:
75: arithmetic_expression -> arithmetic_expression '+' arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 132
  1 (removed by precedence):   On '-' to state 133
  2:   On '*' to state 134
  3:   On '/' to state 135
  Reduce by 75: arithmetic_expression -> arithmetic_expression '+' arithmetic_expression  . 


State 153:
76: arithmetic_expression -> arithmetic_expression '-' arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 132
  1 (removed by precedence):   On '-' to state 133
  2:   On '*' to state 134
  3:   On '/' to state 135
  Reduce by 76: arithmetic_expression -> arithmetic_expression '-' arithmetic_expression  . 


State 154:
77: arithmetic_expression -> arithmetic_expression '*' arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 132
  1 (removed by precedence):   On '-' to state 133
  2 (removed by precedence):   On '*' to state 134
  3 (removed by precedence):   On '/' to state 135
  Reduce by 77: arithmetic_expression -> arithmetic_expression '*' arithmetic_expression  . 


State 155:
78: arithmetic_expression -> arithmetic_expression '/' arithmetic_expression  . 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 132
  1 (removed by precedence):   On '-' to state 133
  2 (removed by precedence):   On '*' to state 134
  3 (removed by precedence):   On '/' to state 135
  Reduce by 78: arithmetic_expression -> arithmetic_expression '/' arithmetic_expression  . 


State 156:
64: arithmetic_expression -> '(' relational_statement ')'  . 
  Reduce by 64: arithmetic_expression -> '(' relational_statement ')'  . 


State 157:
65: arithmetic_expression -> '(' FLOAT ')'  . function_call 
68: arithmetic_expression -> '(' FLOAT ')'  . variable 
72: arithmetic_expression -> '(' FLOAT ')'  . '(' relational_statement ')' 
  0:   On function_call to state 162
  1:   On variable to state 163
  2:   On '(' to state 164
  3:   On NAME to state 85


State 158:
66: arithmetic_expression -> '(' INTEGER ')'  . function_call 
69: arithmetic_expression -> '(' INTEGER ')'  . variable 
71: arithmetic_expression -> '(' INTEGER ')'  . '(' arithmetic_expression ')' 
  0:   On function_call to state 165
  1:   On variable to state 166
  2:   On '(' to state 167
  3:   On NAME to state 85


State 159:
67: arithmetic_expression -> '(' DOUBLE ')'  . function_call 
70: arithmetic_expression -> '(' DOUBLE ')'  . variable 
73: arithmetic_expression -> '(' DOUBLE ')'  . '(' relational_statement ')' 
  0:   On function_call to state 168
  1:   On variable to state 169
  2:   On '(' to state 170
  3:   On NAME to state 85


State 160:
52: if_statement -> IF '(' relational_statement ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 171
  1:   On GOTO to state 88


State 161:
50: function_argument_list -> function_argument_list ',' function_argument  . 
  Reduce by 50: function_argument_list -> function_argument_list ',' function_argument  . 


State 162:
65: arithmetic_expression -> '(' FLOAT ')' function_call  . 
  Reduce by 65: arithmetic_expression -> '(' FLOAT ')' function_call  . 


State 163:
68: arithmetic_expression -> '(' FLOAT ')' variable  . 
  Reduce by 68: arithmetic_expression -> '(' FLOAT ')' variable  . 


State 164:
72: arithmetic_expression -> '(' FLOAT ')' '('  . relational_statement ')' 
  0:   On relational_statement to state 172
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 165:
66: arithmetic_expression -> '(' INTEGER ')' function_call  . 
  Reduce by 66: arithmetic_expression -> '(' INTEGER ')' function_call  . 


State 166:
69: arithmetic_expression -> '(' INTEGER ')' variable  . 
  Reduce by 69: arithmetic_expression -> '(' INTEGER ')' variable  . 


State 167:
71: arithmetic_expression -> '(' INTEGER ')' '('  . arithmetic_expression ')' 
  0:   On arithmetic_expression to state 173
  1:   On constant to state 106
  2:   On variable to state 107
  3:   On function_call to state 108
  4:   On '(' to state 109
  5:   On '-' to state 110
  6:   On INTEGER_NUMBER to state 111
  7:   On FLOAT_NUMBER to state 112
  8:   On NAME to state 85


State 168:
67: arithmetic_expression -> '(' DOUBLE ')' function_call  . 
  Reduce by 67: arithmetic_expression -> '(' DOUBLE ')' function_call  . 


State 169:
70: arithmetic_expression -> '(' DOUBLE ')' variable  . 
  Reduce by 70: arithmetic_expression -> '(' DOUBLE ')' variable  . 


State 170:
73: arithmetic_expression -> '(' DOUBLE ')' '('  . relational_statement ')' 
  0:   On relational_statement to state 174
  1:   On arithmetic_expression to state 105
  2:   On constant to state 106
  3:   On variable to state 107
  4:   On function_call to state 108
  5:   On '(' to state 109
  6:   On '-' to state 110
  7:   On INTEGER_NUMBER to state 111
  8:   On FLOAT_NUMBER to state 112
  9:   On NAME to state 85


State 171:
52: if_statement -> IF '(' relational_statement ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 175


State 172:
72: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement  . ')' 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 176
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 173:
71: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression  . ')' 
75: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
76: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
77: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
78: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0:   On ')' to state 177
  1:   On '+' to state 132
  2:   On '-' to state 133
  3:   On '*' to state 134
  4:   On '/' to state 135


State 174:
73: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement  . ')' 
55: relational_statement -> relational_statement  . le relational_statement 
56: relational_statement -> relational_statement  . ge relational_statement 
57: relational_statement -> relational_statement  . gt relational_statement 
58: relational_statement -> relational_statement  . lt relational_statement 
59: relational_statement -> relational_statement  . eq relational_statement 
60: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 178
  1:   On le to state 126
  2:   On ge to state 127
  3:   On gt to state 128
  4:   On lt to state 129
  5:   On eq to state 130
  6:   On ne to state 131


State 175:
52: if_statement -> IF '(' relational_statement ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 179
  1:   On GOTO to state 88


State 176:
72: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement ')'  . 
  Reduce by 72: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement ')'  . 


State 177:
71: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression ')'  . 
  Reduce by 71: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression ')'  . 


State 178:
73: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement ')'  . 
  Reduce by 73: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement ')'  . 


State 179:
52: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 
  Reduce by 52: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 



