
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_name #0001 procedure_body
2: #0001 ->  <empty>
3: program ->  procedure_name #0002 procedure_body
4: #0002 ->  <empty>
5: procedure_name (NAME) ->  NAME '(' ')'
6: procedure_body ('{') ->  '{' declaration_statement_list #0003 basic_block_list '}'
7: #0003 ->  <empty>
8: procedure_body ('{') ->  '{' basic_block_list '}'
9: declaration_statement_list ->  declaration_statement
10: declaration_statement_list ->  declaration_statement_list declaration_statement
11: declaration_statement (INTEGER) ->  INTEGER NAME ';'
12: declaration_statement (FLOAT) ->  FLOAT NAME ';'
13: basic_block_list ->  basic_block_list basic_block
14: basic_block_list ->  basic_block
15: basic_block (BASIC_BLOCK) ->  BASIC_BLOCK ':' executable_statement_list
16: executable_statement_list ->  assignment_statement_list
17: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
18: executable_statement_list ->  assignment_statement_list if_statement
19: executable_statement_list ->  assignment_statement_list goto_statement
20: assignment_statement_list ->  <empty>
21: assignment_statement_list ->  assignment_statement_list assignment_statement
22: if_statement (IF) ->  IF '(' relational_statement ')' goto_statement ELSE goto_statement
23: goto_statement (GOTO) ->  GOTO BASIC_BLOCK ';'
24: relational_statement ->  arithmetic_expression
25: relational_statement (le) ->  relational_statement le relational_statement
26: relational_statement (ge) ->  relational_statement ge relational_statement
27: relational_statement (gt) ->  relational_statement gt relational_statement
28: relational_statement (lt) ->  relational_statement lt relational_statement
29: relational_statement (eq) ->  relational_statement eq relational_statement
30: relational_statement (ne) ->  relational_statement ne relational_statement
31: arithmetic_expression ->  constant
32: arithmetic_expression ->  variable
33: arithmetic_expression ('(') ->  '(' relational_statement ')'
34: arithmetic_expression ('(') ->  '(' FLOAT ')' variable
35: arithmetic_expression ('(') ->  '(' INTEGER ')' variable
36: arithmetic_expression ('(') ->  '(' DOUBLE ')' variable
37: arithmetic_expression ('(') ->  '(' INTEGER ')' '(' arithmetic_expression ')'
38: arithmetic_expression ('(') ->  '(' FLOAT ')' '(' relational_statement ')'
39: arithmetic_expression ('(') ->  '(' DOUBLE ')' '(' relational_statement ')'
40: arithmetic_expression ('-') ->  '-' constant
41: arithmetic_expression ('-') ->  '-' variable
42: arithmetic_expression ('-') ->  '-' '(' relational_statement ')'
43: arithmetic_expression ('+') ->  arithmetic_expression '+' arithmetic_expression
44: arithmetic_expression ('-') ->  arithmetic_expression '-' arithmetic_expression
45: arithmetic_expression ('*') ->  arithmetic_expression '*' arithmetic_expression
46: arithmetic_expression ('/') ->  arithmetic_expression '/' arithmetic_expression
47: assignment_statement (ASSIGN_OP) ->  variable ASSIGN_OP relational_statement ';'
48: variable (NAME) ->  NAME
49: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
50: constant (FLOAT_NUMBER) ->  FLOAT_NUMBER
51: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BASIC_BLOCK
   259: FLOAT_NUMBER
   260: NAME
   261: RETURN
   262: INTEGER
   263: FLOAT
   264: DOUBLE
   265: IF
   266: ELSE
   267: GOTO
   268: ASSIGN_OP
   269: ne
   270: eq
   271: lt
   272: le
   273: gt
   274: ge
    43: '+'
    45: '-'
    47: '/'
    42: '*'
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    58: ':'


Grammar States: 
State 0:
51: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_name to state 3
  3:   On declaration_statement to state 4
  4:   On NAME to state 5
  5:   On INTEGER to state 6
  6:   On FLOAT to state 7


State 1:
51: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_name #0001 procedure_body 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_name to state 8
  1:   On declaration_statement to state 9
  2:   On NAME to state 5
  3:   On INTEGER to state 6
  4:   On FLOAT to state 7


State 3:
3: program -> procedure_name  . #0002 procedure_body 
  0:   On #0002 to state 10
  Reduce by 4: #0002 ->  . 


State 4:
9: declaration_statement_list -> declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement  . 


State 5:
5: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 11


State 6:
11: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 12


State 7:
12: declaration_statement -> FLOAT  . NAME ';' 
  0:   On NAME to state 13


State 8:
1: program -> declaration_statement_list procedure_name  . #0001 procedure_body 
  0:   On #0001 to state 14
  Reduce by 2: #0001 ->  . 


State 9:
10: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 10: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 10:
3: program -> procedure_name #0002  . procedure_body 
  0:   On procedure_body to state 15
  1:   On '{' to state 16


State 11:
5: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 17


State 12:
11: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 18


State 13:
12: declaration_statement -> FLOAT NAME  . ';' 
  0:   On ';' to state 19


State 14:
1: program -> declaration_statement_list procedure_name #0001  . procedure_body 
  0:   On procedure_body to state 20
  1:   On '{' to state 16


State 15:
3: program -> procedure_name #0002 procedure_body  . 
  Reduce by 3: program -> procedure_name #0002 procedure_body  . 


State 16:
6: procedure_body -> '{'  . declaration_statement_list #0003 basic_block_list '}' 
8: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 21
  1:   On basic_block_list to state 22
  2:   On declaration_statement to state 4
  3:   On basic_block to state 23
  4:   On INTEGER to state 6
  5:   On FLOAT to state 7
  6:   On BASIC_BLOCK to state 24


State 17:
5: procedure_name -> NAME '(' ')'  . 
  Reduce by 5: procedure_name -> NAME '(' ')'  . 


State 18:
11: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 11: declaration_statement -> INTEGER NAME ';'  . 


State 19:
12: declaration_statement -> FLOAT NAME ';'  . 
  Reduce by 12: declaration_statement -> FLOAT NAME ';'  . 


State 20:
1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 
  Reduce by 1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 


State 21:
6: procedure_body -> '{' declaration_statement_list  . #0003 basic_block_list '}' 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0003 to state 25
  1:   On declaration_statement to state 9
  2:   On INTEGER to state 6
  3:   On FLOAT to state 7
  Reduce by 7: #0003 ->  . 


State 22:
8: procedure_body -> '{' basic_block_list  . '}' 
13: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 26
  1:   On basic_block to state 27
  2:   On BASIC_BLOCK to state 24


State 23:
14: basic_block_list -> basic_block  . 
  Reduce by 14: basic_block_list -> basic_block  . 


State 24:
15: basic_block -> BASIC_BLOCK  . ':' executable_statement_list 
  0:   On ':' to state 28


State 25:
6: procedure_body -> '{' declaration_statement_list #0003  . basic_block_list '}' 
  0:   On basic_block_list to state 29
  1:   On basic_block to state 23
  2:   On BASIC_BLOCK to state 24


State 26:
8: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 8: procedure_body -> '{' basic_block_list '}'  . 


State 27:
13: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 13: basic_block_list -> basic_block_list basic_block  . 


State 28:
15: basic_block -> BASIC_BLOCK ':'  . executable_statement_list 
  0:   On executable_statement_list to state 30
  1:   On assignment_statement_list to state 31
  Reduce by 20: assignment_statement_list ->  . 


State 29:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list  . '}' 
13: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 32
  1:   On basic_block to state 27
  2:   On BASIC_BLOCK to state 24


State 30:
15: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 
  Reduce by 15: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 


State 31:
16: executable_statement_list -> assignment_statement_list  . 
17: executable_statement_list -> assignment_statement_list  . RETURN ';' 
18: executable_statement_list -> assignment_statement_list  . if_statement 
19: executable_statement_list -> assignment_statement_list  . goto_statement 
21: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 33
  1:   On if_statement to state 34
  2:   On goto_statement to state 35
  3:   On assignment_statement to state 36
  4:   On IF to state 37
  5:   On GOTO to state 38
  6:   On variable to state 39
  7:   On NAME to state 40
  Reduce by 16: executable_statement_list -> assignment_statement_list  . 


State 32:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 
  Reduce by 6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 


State 33:
17: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 41


State 34:
18: executable_statement_list -> assignment_statement_list if_statement  . 
  Reduce by 18: executable_statement_list -> assignment_statement_list if_statement  . 


State 35:
19: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 19: executable_statement_list -> assignment_statement_list goto_statement  . 


State 36:
21: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 21: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 37:
22: if_statement -> IF  . '(' relational_statement ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 42


State 38:
23: goto_statement -> GOTO  . BASIC_BLOCK ';' 
  0:   On BASIC_BLOCK to state 43


State 39:
47: assignment_statement -> variable  . ASSIGN_OP relational_statement ';' 
  0:   On ASSIGN_OP to state 44


State 40:
48: variable -> NAME  . 
  Reduce by 48: variable -> NAME  . 


State 41:
17: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 17: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 42:
22: if_statement -> IF '('  . relational_statement ')' goto_statement ELSE goto_statement 
  0:   On relational_statement to state 45
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 43:
23: goto_statement -> GOTO BASIC_BLOCK  . ';' 
  0:   On ';' to state 53


State 44:
47: assignment_statement -> variable ASSIGN_OP  . relational_statement ';' 
  0:   On relational_statement to state 54
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 45:
22: if_statement -> IF '(' relational_statement  . ')' goto_statement ELSE goto_statement 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 55
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 46:
24: relational_statement -> arithmetic_expression  . 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0:   On '+' to state 62
  1:   On '-' to state 63
  2:   On '*' to state 64
  3:   On '/' to state 65
  Reduce by 24: relational_statement -> arithmetic_expression  . 


State 47:
31: arithmetic_expression -> constant  . 
  Reduce by 31: arithmetic_expression -> constant  . 


State 48:
32: arithmetic_expression -> variable  . 
  Reduce by 32: arithmetic_expression -> variable  . 


State 49:
33: arithmetic_expression -> '('  . relational_statement ')' 
34: arithmetic_expression -> '('  . FLOAT ')' variable 
35: arithmetic_expression -> '('  . INTEGER ')' variable 
36: arithmetic_expression -> '('  . DOUBLE ')' variable 
37: arithmetic_expression -> '('  . INTEGER ')' '(' arithmetic_expression ')' 
38: arithmetic_expression -> '('  . FLOAT ')' '(' relational_statement ')' 
39: arithmetic_expression -> '('  . DOUBLE ')' '(' relational_statement ')' 
  0:   On relational_statement to state 66
  1:   On FLOAT to state 67
  2:   On INTEGER to state 68
  3:   On DOUBLE to state 69
  4:   On arithmetic_expression to state 46
  5:   On constant to state 47
  6:   On variable to state 48
  7:   On '(' to state 49
  8:   On '-' to state 50
  9:   On INTEGER_NUMBER to state 51
  10:   On FLOAT_NUMBER to state 52
  11:   On NAME to state 40


State 50:
40: arithmetic_expression -> '-'  . constant 
41: arithmetic_expression -> '-'  . variable 
42: arithmetic_expression -> '-'  . '(' relational_statement ')' 
  0:   On constant to state 70
  1:   On variable to state 71
  2:   On '(' to state 72
  3:   On INTEGER_NUMBER to state 51
  4:   On FLOAT_NUMBER to state 52
  5:   On NAME to state 40


State 51:
49: constant -> INTEGER_NUMBER  . 
  Reduce by 49: constant -> INTEGER_NUMBER  . 


State 52:
50: constant -> FLOAT_NUMBER  . 
  Reduce by 50: constant -> FLOAT_NUMBER  . 


State 53:
23: goto_statement -> GOTO BASIC_BLOCK ';'  . 
  Reduce by 23: goto_statement -> GOTO BASIC_BLOCK ';'  . 


State 54:
47: assignment_statement -> variable ASSIGN_OP relational_statement  . ';' 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ';' to state 73
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 55:
22: if_statement -> IF '(' relational_statement ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 74
  1:   On GOTO to state 38


State 56:
25: relational_statement -> relational_statement le  . relational_statement 
  0:   On relational_statement to state 75
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 57:
26: relational_statement -> relational_statement ge  . relational_statement 
  0:   On relational_statement to state 76
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 58:
27: relational_statement -> relational_statement gt  . relational_statement 
  0:   On relational_statement to state 77
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 59:
28: relational_statement -> relational_statement lt  . relational_statement 
  0:   On relational_statement to state 78
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 60:
29: relational_statement -> relational_statement eq  . relational_statement 
  0:   On relational_statement to state 79
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 61:
30: relational_statement -> relational_statement ne  . relational_statement 
  0:   On relational_statement to state 80
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 62:
43: arithmetic_expression -> arithmetic_expression '+'  . arithmetic_expression 
  0:   On arithmetic_expression to state 81
  1:   On constant to state 47
  2:   On variable to state 48
  3:   On '(' to state 49
  4:   On '-' to state 50
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52
  7:   On NAME to state 40


State 63:
44: arithmetic_expression -> arithmetic_expression '-'  . arithmetic_expression 
  0:   On arithmetic_expression to state 82
  1:   On constant to state 47
  2:   On variable to state 48
  3:   On '(' to state 49
  4:   On '-' to state 50
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52
  7:   On NAME to state 40


State 64:
45: arithmetic_expression -> arithmetic_expression '*'  . arithmetic_expression 
  0:   On arithmetic_expression to state 83
  1:   On constant to state 47
  2:   On variable to state 48
  3:   On '(' to state 49
  4:   On '-' to state 50
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52
  7:   On NAME to state 40


State 65:
46: arithmetic_expression -> arithmetic_expression '/'  . arithmetic_expression 
  0:   On arithmetic_expression to state 84
  1:   On constant to state 47
  2:   On variable to state 48
  3:   On '(' to state 49
  4:   On '-' to state 50
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52
  7:   On NAME to state 40


State 66:
33: arithmetic_expression -> '(' relational_statement  . ')' 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 85
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 67:
34: arithmetic_expression -> '(' FLOAT  . ')' variable 
38: arithmetic_expression -> '(' FLOAT  . ')' '(' relational_statement ')' 
  0:   On ')' to state 86


State 68:
35: arithmetic_expression -> '(' INTEGER  . ')' variable 
37: arithmetic_expression -> '(' INTEGER  . ')' '(' arithmetic_expression ')' 
  0:   On ')' to state 87


State 69:
36: arithmetic_expression -> '(' DOUBLE  . ')' variable 
39: arithmetic_expression -> '(' DOUBLE  . ')' '(' relational_statement ')' 
  0:   On ')' to state 88


State 70:
40: arithmetic_expression -> '-' constant  . 
  Reduce by 40: arithmetic_expression -> '-' constant  . 


State 71:
41: arithmetic_expression -> '-' variable  . 
  Reduce by 41: arithmetic_expression -> '-' variable  . 


State 72:
42: arithmetic_expression -> '-' '('  . relational_statement ')' 
  0:   On relational_statement to state 89
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 73:
47: assignment_statement -> variable ASSIGN_OP relational_statement ';'  . 
  Reduce by 47: assignment_statement -> variable ASSIGN_OP relational_statement ';'  . 


State 74:
22: if_statement -> IF '(' relational_statement ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 90


State 75:
25: relational_statement -> relational_statement le relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 56
  1 (removed by precedence):   On ge to state 57
  2 (removed by precedence):   On gt to state 58
  3 (removed by precedence):   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 25: relational_statement -> relational_statement le relational_statement  . 


State 76:
26: relational_statement -> relational_statement ge relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 56
  1 (removed by precedence):   On ge to state 57
  2 (removed by precedence):   On gt to state 58
  3 (removed by precedence):   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 26: relational_statement -> relational_statement ge relational_statement  . 


State 77:
27: relational_statement -> relational_statement gt relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 56
  1 (removed by precedence):   On ge to state 57
  2 (removed by precedence):   On gt to state 58
  3 (removed by precedence):   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 27: relational_statement -> relational_statement gt relational_statement  . 


State 78:
28: relational_statement -> relational_statement lt relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0 (removed by precedence):   On le to state 56
  1 (removed by precedence):   On ge to state 57
  2 (removed by precedence):   On gt to state 58
  3 (removed by precedence):   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 28: relational_statement -> relational_statement lt relational_statement  . 


State 79:
29: relational_statement -> relational_statement eq relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On le to state 56
  1:   On ge to state 57
  2:   On gt to state 58
  3:   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 29: relational_statement -> relational_statement eq relational_statement  . 


State 80:
30: relational_statement -> relational_statement ne relational_statement  . 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On le to state 56
  1:   On ge to state 57
  2:   On gt to state 58
  3:   On lt to state 59
  4 (removed by precedence):   On eq to state 60
  5 (removed by precedence):   On ne to state 61
  Reduce by 30: relational_statement -> relational_statement ne relational_statement  . 


State 81:
43: arithmetic_expression -> arithmetic_expression '+' arithmetic_expression  . 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 62
  1 (removed by precedence):   On '-' to state 63
  2:   On '*' to state 64
  3:   On '/' to state 65
  Reduce by 43: arithmetic_expression -> arithmetic_expression '+' arithmetic_expression  . 


State 82:
44: arithmetic_expression -> arithmetic_expression '-' arithmetic_expression  . 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 62
  1 (removed by precedence):   On '-' to state 63
  2:   On '*' to state 64
  3:   On '/' to state 65
  Reduce by 44: arithmetic_expression -> arithmetic_expression '-' arithmetic_expression  . 


State 83:
45: arithmetic_expression -> arithmetic_expression '*' arithmetic_expression  . 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 62
  1 (removed by precedence):   On '-' to state 63
  2 (removed by precedence):   On '*' to state 64
  3 (removed by precedence):   On '/' to state 65
  Reduce by 45: arithmetic_expression -> arithmetic_expression '*' arithmetic_expression  . 


State 84:
46: arithmetic_expression -> arithmetic_expression '/' arithmetic_expression  . 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0 (removed by precedence):   On '+' to state 62
  1 (removed by precedence):   On '-' to state 63
  2:   On '*' to state 64
  3 (removed by precedence):   On '/' to state 65
  Reduce by 46: arithmetic_expression -> arithmetic_expression '/' arithmetic_expression  . 


State 85:
33: arithmetic_expression -> '(' relational_statement ')'  . 
  Reduce by 33: arithmetic_expression -> '(' relational_statement ')'  . 


State 86:
34: arithmetic_expression -> '(' FLOAT ')'  . variable 
38: arithmetic_expression -> '(' FLOAT ')'  . '(' relational_statement ')' 
  0:   On variable to state 91
  1:   On '(' to state 92
  2:   On NAME to state 40


State 87:
35: arithmetic_expression -> '(' INTEGER ')'  . variable 
37: arithmetic_expression -> '(' INTEGER ')'  . '(' arithmetic_expression ')' 
  0:   On variable to state 93
  1:   On '(' to state 94
  2:   On NAME to state 40


State 88:
36: arithmetic_expression -> '(' DOUBLE ')'  . variable 
39: arithmetic_expression -> '(' DOUBLE ')'  . '(' relational_statement ')' 
  0:   On variable to state 95
  1:   On '(' to state 96
  2:   On NAME to state 40


State 89:
42: arithmetic_expression -> '-' '(' relational_statement  . ')' 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 97
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 90:
22: if_statement -> IF '(' relational_statement ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 98
  1:   On GOTO to state 38


State 91:
34: arithmetic_expression -> '(' FLOAT ')' variable  . 
  Reduce by 34: arithmetic_expression -> '(' FLOAT ')' variable  . 


State 92:
38: arithmetic_expression -> '(' FLOAT ')' '('  . relational_statement ')' 
  0:   On relational_statement to state 99
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 93:
35: arithmetic_expression -> '(' INTEGER ')' variable  . 
  Reduce by 35: arithmetic_expression -> '(' INTEGER ')' variable  . 


State 94:
37: arithmetic_expression -> '(' INTEGER ')' '('  . arithmetic_expression ')' 
  0:   On arithmetic_expression to state 100
  1:   On constant to state 47
  2:   On variable to state 48
  3:   On '(' to state 49
  4:   On '-' to state 50
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52
  7:   On NAME to state 40


State 95:
36: arithmetic_expression -> '(' DOUBLE ')' variable  . 
  Reduce by 36: arithmetic_expression -> '(' DOUBLE ')' variable  . 


State 96:
39: arithmetic_expression -> '(' DOUBLE ')' '('  . relational_statement ')' 
  0:   On relational_statement to state 101
  1:   On arithmetic_expression to state 46
  2:   On constant to state 47
  3:   On variable to state 48
  4:   On '(' to state 49
  5:   On '-' to state 50
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52
  8:   On NAME to state 40


State 97:
42: arithmetic_expression -> '-' '(' relational_statement ')'  . 
  Reduce by 42: arithmetic_expression -> '-' '(' relational_statement ')'  . 


State 98:
22: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 
  Reduce by 22: if_statement -> IF '(' relational_statement ')' goto_statement ELSE goto_statement  . 


State 99:
38: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement  . ')' 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 102
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 100:
37: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression  . ')' 
43: arithmetic_expression -> arithmetic_expression  . '+' arithmetic_expression 
44: arithmetic_expression -> arithmetic_expression  . '-' arithmetic_expression 
45: arithmetic_expression -> arithmetic_expression  . '*' arithmetic_expression 
46: arithmetic_expression -> arithmetic_expression  . '/' arithmetic_expression 
  0:   On ')' to state 103
  1:   On '+' to state 62
  2:   On '-' to state 63
  3:   On '*' to state 64
  4:   On '/' to state 65


State 101:
39: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement  . ')' 
25: relational_statement -> relational_statement  . le relational_statement 
26: relational_statement -> relational_statement  . ge relational_statement 
27: relational_statement -> relational_statement  . gt relational_statement 
28: relational_statement -> relational_statement  . lt relational_statement 
29: relational_statement -> relational_statement  . eq relational_statement 
30: relational_statement -> relational_statement  . ne relational_statement 
  0:   On ')' to state 104
  1:   On le to state 56
  2:   On ge to state 57
  3:   On gt to state 58
  4:   On lt to state 59
  5:   On eq to state 60
  6:   On ne to state 61


State 102:
38: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement ')'  . 
  Reduce by 38: arithmetic_expression -> '(' FLOAT ')' '(' relational_statement ')'  . 


State 103:
37: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression ')'  . 
  Reduce by 37: arithmetic_expression -> '(' INTEGER ')' '(' arithmetic_expression ')'  . 


State 104:
39: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement ')'  . 
  Reduce by 39: arithmetic_expression -> '(' DOUBLE ')' '(' relational_statement ')'  . 



